getwd()
# En R es por convención usar . como parte de los nombres
if (!dir.exists("../data/")){
dir.create("../data")
}
# 1. setwd() y getwd()
# 2. Archivos con dirección relativa y absoluta
getwd()
# Descargar archivo (una sola vez)
archivo.url <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
archivo.nombre <- "../data/cameras.csv"
if(!file.exists(archivo.nombre)){
download.file(archivo.url, destfile = archivo.nombre)
fecha.descarga <- date()
}
# Vamos a ver si lo pudimos bajar
df <- read.csv(archivo.nombre)
View(df)
names(df)
fecha.descarga <- date()
fecha.descarga
covid.url <- "http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip"
covid.archivo <- "../data/datos_abiertos_covid19.zip"
covid.dic.conceptos.url <- "http://epidemiologia.salud.gob.mx/gobmx/salud/datos_abiertos/diccionario_datos_covid19.zip"
covid.dic.conceptos.archivo <- "../data/diccionario.zip"
# ¿No suena parecido? Hagamos una función
if(!file.exists(covid.archivo)){
download.file(covid.url, destfile = covid.archivo)
unzip(covid.archivo, exdir = "../data/")
download.file(covid.dic.conceptos.url, destfile = covid.dic.conceptos.archivo)
unzip(covid.dic.conceptos.archivo, exdir = "../data/")
fecha.descarga <- date()
}
covid.url <- "http://datosabiertos.salud.gob.mx/gobmx/salud/datos_abiertos/datos_abiertos_covid19.zip"
covid.archivo <- "../data/datos_abiertos_covid19.zip"
covid.dic.conceptos.url <- "http://epidemiologia.salud.gob.mx/gobmx/salud/datos_abiertos/diccionario_datos_covid19.zip"
covid.dic.conceptos.archivo <- "../data/diccionario.zip"
# ¿No suena parecido? Hagamos una función
if(!file.exists(covid.archivo)){
download.file(covid.url, destfile = covid.archivo)
unzip(covid.archivo, exdir = "../data/")
download.file(covid.dic.conceptos.url, destfile = covid.dic.conceptos.archivo)
unzip(covid.dic.conceptos.archivo, exdir = "../data/")
fecha.descarga <- date()
}
# Archivos en xml
library("xml2")
#Leer archivo ejemplo xml
datos.xml <- read_xml("../data/ejemplo.xml")
#Leer archivo ejemplo xml
desayunos.xml <- read_xml("../data/breakfast.xml")
View(desayunos.xml)
xml_name(desayunos.xml)
xml_children(desayunos.xml)
for(nodo in xml_children(desayunos.xml)){
nodo
}
nodo$doc
nodo$text
for(nodo in xml_children(desayunos.xml)){
xml_name(nodo)
}
xml_name(desayunos.xml)
xml_name(nodo)
for(nodo in xml_children(desayunos.xml)){
print(xml_name(nodo))
}
print(xml_attr(nodo))
for(food in xml_children(desayunos.xml)){
print(paste(xml_name(prop), ':', xml_text(prop))
}
}
#Leer archivo ejemplo xml
desayunos.xml <- read_xml("../data/breakfast.xml")
xml_name(desayunos.xml)
for(food in xml_children(desayunos.xml)){
for(prop in xml_children(food)){
print(paste(xml_name(prop), ':', xml_text(prop)))
}
}
#Leer archivo ejemplo xml
desayunos.xml <- read_xml("../data/breakfast.xml")
xml_name(desayunos.xml)
for(food in xml_children(desayunos.xml)){
print("Nueva comida:")
for(prop in xml_children(food)){
print("\t", paste(xml_name(prop), ':', xml_text(prop)))
}
}
#Leer archivo ejemplo xml
desayunos.xml <- read_xml("../data/breakfast.xml")
xml_name(desayunos.xml)
for(food in xml_children(desayunos.xml)){
print("Nueva comida:")
for(prop in xml_children(food)){
print(paste("\t ", xml_name(prop), ':', xml_text(prop)))
}
}
clear
clear()
clc
# Vamos a ver si lo podemos abrir bien
df.covid = read.csv("../data/200814COVID19MEXICO.csv")
df.covid.dic.con <- readxl::read_excel("../data/diccionario_datos_covid19/Descriptores_0419.xlsx")
library(jsonlite)
if (!dir.exists("../data/")){
dir.create("../data")
}
# Descargar archivo (una sola vez)
archivo.url <- "https://api.github.com/users/juliowaissman/repos"
archivo.nombre <- "../data/repos.json"
if(!file.exists(archivo.nombre)){
download.file(archivo.url, destfile = archivo.nombre, method = "curl")
fecha.descarga <- date()
}
r.json <- fromJSON(archivo.nombre)
View(r.json)
getwd()
#%% Archivos en xml
library("xml2")
#%% Leer archivo ejemplo xml
datos.xml <- read_xml("../ejemplos/ejemplo.xml")
#%% Archivos en xml
library("xml2")
#%% Leer archivo ejemplo xml
datos.xml <- read_xml("../ejemplos/ejemplo.xml")
xml_root(datos.xml)
for (des in xml_root(datos.xml)){
print("Opción:")
xml_attr(des)
}
for (des in xml_root(datos.xml)){
print(des)
}
c <- xml_root(datos.xml)
c
c[1]
c[1]$node
xml_attrs(c[1])
xml_attrs(c)
c
c[1]
c$doc
c$node
xml_contents(c[0])
xml_contents(c)
c
c <- xml_root(datos.xml)
c
xml_child(c)
xml_child(c)
xml_children(c)
xml_children(c)[1]
xml_children(c)[2]
for (des in xml_children(xml_root(datos.xml))){
print("Opción:")
for (atr in xml_children(des)){
print(paste(xml_name(atr), "->", xml_text(atr)))
}
}
for (des in xml_children(xml_root(datos.xml))){
print("Opción:")
for (atr in xml_children(des)){
print(paste("\t", xml_name(atr), "->", xml_text(atr)))
}
}
print(paste("   ", xml_name(atr), "->", xml_text(atr)))
for (des in xml_children(xml_root(datos.xml))){
print("Opción:")
for (atr in xml_children(des)){
print(paste("   ", xml_name(atr), "->", xml_text(atr)))
}
}
xml_find_all("name",datos.xml)
xml_find_all(datos.xml,"name")
xml_find_all(datos.xml,"food/name")
print("Las opciones disponibles son:")
for (menu in xml_find_all(datos.xml,"food/name")){
print(xml_text(menu))
}
# ¿Donde se encuentra en estos momentos la estación espacial?
response <- httr::GET("http://api.open-notify.org/iss-now.json")
response
print(paste("Status:", response$status_code)
print(paste("Status:", response$status_code))
requests.get("http://api.open-notify.org/iss-now.json")
# ¿Donde se encuentra en estos momentos la estación espacial?
response <- httr::GET("http://api.open-notify.org/iss-now.json")
print(paste("Status:", response$status_code))
print(paste("Status:", response$status_code))
print(paste("Contenido:", response$content))
response
# Vamos a preguntar algo que no existe en la API
response <- httr::GET("http://api.open-notify.org/iss-pass")
print(paste("Status:", response$status_code))
print(paste("Contenido:", response$content))
# Vamos a preguntar algo que si existe pero lo vamos apreguntar mal
response <- httr::GET("http://api.open-notify.org/iss-pass.json")
print(paste("Status:", response$status_code))
print(paste("Contenido:", response$content))
# ¿Donde se encuentra en estos momentos la estación espacial?
response <- httr::GET("http://api.open-notify.org/iss-now.json")
print(paste("Status:", response$status_code))
print(paste("Contenido:", httr::content(response, as = 'parsed')))
print(paste("Contenido:", httr::content(response, as = 'text')))
print(paste("Contenido:", httr::content(response, as = 'text')))
# Vamos a preguntar algo que no existe en la API
response <- httr::GET("http://api.open-notify.org/iss-pass")
print(paste("Status:", response$status_code))
print(paste("Contenido:", httr::content(response, as = 'text')))
# Vamos a preguntar algo que si existe pero lo vamos apreguntar mal
response <- httr::GET("http://api.open-notify.org/iss-pass.json")
print(paste("Status:", response$status_code))
print(paste("Contenido:", httr::content(response, as = 'text')))
parametros = list(
lat = 29.08919,
lon = -110.96133
)
response <- httr::GET("http://api.open-notify.org/iss-pass.json", query = parametros)
response
print(paste("Status:", response$status_code))
print(paste("Contenido:", httr::content(response, as = 'text')))
print(paste("Contenido:", httr::content(response, as = 'parsed')))
print(httr::content(response, as = 'parsed'))
httr::content(response, as = 'parsed')
contenido <- httr::content(response, as = 'parsed')
View(contenido)
View(contenido)
df.contenido <- data.frame(contenido)
df.contenido
# ¿Donde se encuentra en estos momentos la estación espacial?
response <- httr::GET("http://api.open-notify.org/iss-now.json")
print(paste("Status:", response$status_code))
print(paste("Contenido:", httr::content(response, as = 'text')))
# Vamos a preguntar algo que no existe en la API
response <- httr::GET("http://api.open-notify.org/iss-pass")
print(paste("Status:", response$status_code))
print(paste("Contenido:", httr::content(response, as = 'text')))
# Vamos a preguntar algo que si existe pero lo vamos apreguntar mal
response <- httr::GET("http://api.open-notify.org/iss-pass.json")
print(paste("Status:", response$status_code))
print(paste("Contenido:", httr::content(response, as = 'text')))
parametros = list(
lat = 29.08919,
lon = -110.96133
)
response <- httr::GET("http://api.open-notify.org/iss-pass.json", query = parametros)
print(paste("Status:", response$status_code))
contenido <- httr::content(response, as = 'parsed')
df.contenido <- data.frame(contenido)
df.contenido
View(df.contenido)
View(contenido)
